# Terraform .gitignore
# Comprehensive ignore file for Terraform projects

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac .DS_Store files
.DS_Store

# Ignore Windows Thumbs.db files
Thumbs.db

# Ignore vim swap files
*.swp
*.swo

# Ignore emacs backup files
*~

# Ignore IDE files
.vscode/
.idea/
*.iml

# Ignore log files
*.log

# Ignore temporary files
*.tmp
*.temp

# Ignore backup files
*.backup
*.bak

# Ignore AWS CLI credentials (if accidentally placed in project)
.aws/
credentials
config

# Ignore SSH keys (if accidentally placed in project)
*.pem
*.key
id_rsa*
id_ed25519*

# Ignore environment files
.env
.env.local
.env.*.local

# Ignore Terraform lock files (optional - some teams prefer to commit this)
# .terraform.lock.hcl

# Ignore generated documentation
docs/

# Ignore test results
test-results/
*.xml

# Ignore compressed files
*.zip
*.tar.gz
*.tgz

# Ignore node_modules if using any Node.js tools
node_modules/

# Ignore Python cache if using Python tools
__pycache__/
*.pyc
*.pyo

# Ignore Go binaries if using Go tools
*.exe
*.exe~
*.dll
*.so
*.dylib

# Project specific ignores
# Add any project-specific files or directories here

# Example: Ignore specific configuration files
# config/secrets.yaml
# scripts/deploy-keys.sh
