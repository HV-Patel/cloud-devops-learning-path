pipeline {
    agent any
    
    tools {
        maven 'maven'
    }
    // Pipeline configuration: Uses any available agent and Maven tool named 'maven'
    
    environment {
        SERVER_IP = '98.86.230.111'  // Your server IP
        TOMCAT_PORT = '8090'
        APP_CONTEXT = 'addressbook'
        BUILD_TIMESTAMP = "${new Date().format('yyyy-MM-dd HH:mm:ss')}"
    }
    // Environment variables: Define server details and build timestamp for webhook builds
    
    triggers {
        githubPush()
    }
    // GitHub trigger: Automatically starts pipeline when GitHub webhook receives push
    
    stages {
        stage("Webhook Info") {
            steps {
                script {
                    echo "WEBHOOK TRIGGERED BUILD"
                    echo "Build Time: ${BUILD_TIMESTAMP}"
                    echo "Triggered by GitHub push event"
                }
            }
        }
        // Webhook info stage: Displays information about the webhook trigger
        
        stage("Checkout") {   
            steps {
                script {
                    echo "Checking out code from repository..."
                }
                git branch: 'main', url: 'https://github.com/manikcloud/cloud-devops-learning-path.git'
                script {
                    echo "Code checkout completed successfully"
                }
            }    
        }
        // Checkout stage: Downloads latest source code from GitHub repository main branch
        
        stage('Navigate to Project') {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.3_git_integration') {
                    script {
                        echo "Navigating to project directory..."
                        echo "Project files:"
                    }
                    sh "pwd && ls -la"
                }
            }
        }
        // Navigation stage: Changes to project directory and lists files for verification
        
        stage('Maven Clean') {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.3_git_integration') {
                    script {
                        echo "Cleaning previous build artifacts..."
                    }
                    sh "mvn clean"
                    script {
                        echo "Clean completed successfully"
                    }
                }
            }
        }
        // Clean stage: Removes previous build artifacts to ensure fresh build
        
        stage('Maven Build') {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.3_git_integration') {
                    script {
                        echo "Compiling source code..."
                    }
                    sh "mvn compile"
                    script {
                        echo "Build completed successfully"
                    }
                }
            }
        }
        // Build stage: Compiles Java source code into bytecode
        
        stage("Maven Package") {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.3_git_integration') {
                    script {
                        echo "Creating WAR package..."
                    }
                    sh "mvn package"
                    script {
                        echo "Package created successfully"
                        sh "ls -la target/*.war"
                    }
                }
            }
        }
        // Package stage: Creates WAR file for web application deployment
        
        stage("Deploy to Tomcat") {          	 
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.3_git_integration') {
                    script {
                        echo "Deploying to Tomcat server..."
                        echo "Target: http://${SERVER_IP}:${TOMCAT_PORT}/${APP_CONTEXT}/"
                    }
                    deploy adapters: [tomcat9(credentialsId: 'tomcat-9', path: '', url: "http://${SERVER_IP}:${TOMCAT_PORT}")], 
                           contextPath: "/${APP_CONTEXT}", 
                           war: '**/target/*.war'
                    script {
                        echo "Deployment completed successfully"
                        echo "Application URL: http://${SERVER_IP}:${TOMCAT_PORT}/${APP_CONTEXT}/"
                    }
                }
            }
        }
        // Deploy stage: Uploads WAR file to Tomcat server using configured credentials
    }
    
    post {
        success {
            script {
                echo "WEBHOOK BUILD SUCCESSFUL!"
                echo "Build completed at: ${BUILD_TIMESTAMP}"
                echo "Application deployed: http://${SERVER_IP}:${TOMCAT_PORT}/${APP_CONTEXT}/"
                echo "Triggered by: GitHub webhook"
            }
        }
        // Success block: Displays success message with webhook details when build passes
        
        failure {
            script {
                echo "WEBHOOK BUILD FAILED!"
                echo "Build failed at: ${BUILD_TIMESTAMP}"
                echo "Triggered by: GitHub webhook"
                echo "Check console output for details"
            }
        }
        // Failure block: Displays error message with webhook details when build fails
    }
}
