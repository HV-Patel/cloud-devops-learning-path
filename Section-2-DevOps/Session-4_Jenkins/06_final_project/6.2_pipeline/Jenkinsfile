pipeline {
    agent any
    tools {
        maven 'maven'
    }
    
    environment {
        SERVER_IP = '98.86.230.111'  // Your server IP
        TOMCAT_PORT = '8090'
        APP_CONTEXT = 'addressbook'
    }
    
    stages {
        stage("Checkout") {   
            steps {               	 
                git branch: 'main', url: 'https://github.com/manikcloud/cloud-devops-learning-path.git'        	 
            }    
        }
        
        stage('Navigate to Project') {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                    sh "pwd && ls -la"
                }
            }
        }
        
        stage('Maven Clean') {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                    sh "mvn clean"
                }
            }
        }
        
        stage('Maven Build') {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                    sh "mvn compile"
                }
            }
        }
        
        stage("Unit Test") {          	 
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                    sh "mvn test"
                }
            }
        }
        
        stage("Maven Package") {
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                    sh "mvn package"
                }
            }
        }
        
        stage("Deploy to Tomcat") {          	 
            steps {
                dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                    script {
                        echo "üöÄ Starting deployment to Tomcat..."
                        echo "üéØ Target URL: http://${SERVER_IP}:${TOMCAT_PORT}"
                        echo "üì¶ WAR file: target/addressbook.war"
                        echo "üåê Context path: /${APP_CONTEXT}"
                    }
                    
                    // Deploy with error handling
                    script {
                        try {
                            deploy adapters: [tomcat9(credentialsId: 'tomcat-9', path: '', url: "http://${SERVER_IP}:${TOMCAT_PORT}")], 
                                   contextPath: "/${APP_CONTEXT}", 
                                   war: '**/target/*.war'
                            echo "‚úÖ Deployment completed successfully!"
                            echo "üåê Application URL: http://${SERVER_IP}:${TOMCAT_PORT}/${APP_CONTEXT}/"
                        } catch (Exception e) {
                            echo "‚ùå Deployment failed: ${e.getMessage()}"
                            echo "üîç Check Tomcat server status and credentials"
                            throw e
                        }
                    }
                }
            }
        }  	
    }
    
    post {
        always {
            dir('Section-2-DevOps/Session-4_Jenkins/06_final_project/6.2_pipeline') {
                script {
                    if (fileExists('target/surefire-reports/*.xml')) {
                        junit 'target/surefire-reports/*.xml'
                    } else {
                        echo "No test results found"
                    }
                }
            }
        }
        success {
            echo "Pipeline completed successfully!"
            echo "App URL: http://${SERVER_IP}:${TOMCAT_PORT}/${APP_CONTEXT}/"
        }
        failure {
            echo "Pipeline failed! Check the logs above."
        }
    }
}
