# Sample applications for testing NGINX Ingress
# This creates multiple services that we can route to via Ingress

# App 1: Frontend Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: nginx
        image: nginx:1.21
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: frontend-html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-html
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head><title>Frontend App</title></head>
    <body style="background-color: #e3f2fd; font-family: Arial;">
        <h1>üåê Frontend Application</h1>
        <p>This is the main frontend served by NGINX Ingress</p>
        <p>Path: /</p>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
---
# App 2: API Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: nginx
        image: nginx:1.21
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: api-html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-html
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head><title>API Service</title></head>
    <body style="background-color: #f3e5f5; font-family: Arial;">
        <h1>üîß API Service</h1>
        <p>This is the API backend service</p>
        <p>Path: /api</p>
        <p>Status: Running</p>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
  - port: 80
    targetPort: 80
---
# App 3: Admin Dashboard
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-app
  labels:
    app: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
    spec:
      containers:
      - name: nginx
        image: nginx:1.21
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: admin-html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-html
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head><title>Admin Dashboard</title></head>
    <body style="background-color: #fff3e0; font-family: Arial;">
        <h1>‚öôÔ∏è Admin Dashboard</h1>
        <p>This is the admin interface</p>
        <p>Path: /admin</p>
        <p>Access: Restricted</p>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: admin-service
spec:
  selector:
    app: admin
  ports:
  - port: 80
    targetPort: 80
